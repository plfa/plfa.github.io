name: Build & Test

on:
  push:
    branches:
      - dev
    tags:
      - "*"
  pull_request:
    types:
      - opened
      - synchronize
  merge_group:

env:
  PREFERRED_AGDA_VERSION: "2.6.3"
  PREFERRED_AGDA_STDLIB_VERSION: "1.7.2"
  PREFERRED_GHC_VERSION: "9.2.7"
  PREFERRED_CABAL_VERSION: "3.10.1.0"
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true

defaults:
  run:
    shell: pwsh

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          # Recommended versions
          - name: "Build on macOS"
            os: macOS-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          - name: "Build on Linux"
            os: ubuntu-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          - name: "Build on Windows"
            os: windows-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          # Older versions of Agda
          - name: "Build with older Agda 2.6.2.2"
            os: ubuntu-latest
            agda-version: "2.6.2.2"
            agda-stdlib-version: "1.7.1"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          - name: "Build with older Agda 2.6.2.1"
            os: ubuntu-latest
            agda-version: "2.6.2.1"
            agda-stdlib-version: "1.7.1"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          - name: "Build with older Agda 2.6.2"
            os: ubuntu-latest
            agda-version: "2.6.2"
            agda-stdlib-version: "1.7.1"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          - name: "Build with older Agda 2.6.1.3"
            os: ubuntu-latest
            agda-version: "2.6.1.3"
            agda-stdlib-version: "1.6"
            ghc-version: "${{ env.PREFERRED_GHC_VERSION }}"
            experimental: false
          # Newer versions of GHC
          - name: "Build with newer GHC 9.6.2"
            os: ubuntu-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "9.6.2"
            experimental: true
          - name: "Build with newer GHC 9.4.5"
            os: ubuntu-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "9.4.5"
            experimental: false
          # Older versions of GHC
          - name: "Build with older GHC 9.0.2"
            os: ubuntu-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "9.0.2"
            experimental: false
          - name: "Build with older GHC 8.10.7"
            os: ubuntu-latest
            agda-version: "${{ env.PREFERRED_AGDA_VERSION }}"
            agda-stdlib-version: "${{ env.PREFERRED_AGDA_STDLIB_VERSION }}"
            ghc-version: "8.10.7"
            experimental: false

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: "Setup Haskell"
        uses: ./.github/actions/setup-haskell
        with:
          ghc-version: "${{ matrix.ghc-version }}"
          cabal-version: "${{ env.PREFERRED_CABAL_VERSION }}"
          cabal-project-freeze-file: "cabal.project.ghc-${{ matrix.ghc-version }}.freeze"

      - name: "Setup Agda"
        uses: wenkokke/setup-agda@latest
        with:
          agda-version: ${{ matrix.agda-version }}
          force-no-build: true

      - name: "Setup Node"
        uses: ./.github/actions/setup-node

      - name: "Setup HTMLProofer"
        if: runner.os != 'Windows'
        uses: ./.github/actions/setup-htmlproofer
        # depends on Gemfile

      - name: "Setup EPUBCheck"
        uses: ./.github/actions/setup-epubcheck
        id: setup-epubcheck
        with:
          epubcheck-version: "4.2.6"

      - name: "Setup Calibre"
        uses: ./.github/actions/setup-calibre

      - name: "Cache build"
        uses: actions/cache@v3
        with:
          path: _cache
          key: build-${{ runner.os }}-${{ secrets.BUILD_CACHE_VERSION }}

      - name: "Set standard-library version"
        if: matrix.agda-stdlib-version != '${{ env.PREFERRED_AGDA_STDLIB_VERSION }}'
        run: |
          git fetch origin v${{ matrix.agda-stdlib-version }}:v${{ matrix.agda-stdlib-version }} --depth=1
          git checkout v${{ matrix.agda-stdlib-version }}
        working-directory: standard-library

      - name: "Build"
        run: make build
        env:
          CABAL_ARGS: --project-file=cabal.project.ghc-${{ matrix.ghc-version }}
        # depends on cabal.project.ghc-X.Y

      - name: "Test with HTML-validate"
        run: make test-html-validate

      - name: "Test with HTMLProofer"
        if: runner.os != 'Windows'
        run: make test-htmlproofer

      - name: "Test with EPUBCheck"
        run: make test-epubcheck
        env:
          EPUBCHECK: "java -jar ${{ steps.setup-epubcheck.outputs.epubcheck-jar-path }}"

      - name: "Upload latest artifact"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Website HEAD ${{ runner.os }} Agda-${{ matrix.agda-version }} GHC-${{ matrix.ghc-version }}
          path: _site
          if-no-files-found: error

  publish:
    name: Publish to GitHub Pages
    needs: [build]
    if: github.event_name == 'push'
    uses: ./.github/workflows/publish.yml
    with:
      artifact-name: Website HEAD Linux Agda-${{ env.PREFERRED_AGDA_VERSION }} GHC-${{ env.PREFERRED_GHC_VERSION }}

  release:
    name: Publish to GitHub Releases
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    uses: ./.github/workflows/release.yml
    with:
      artifact-name: Website HEAD Linux Agda-${{ env.PREFERRED_AGDA_VERSION }} GHC-${{ env.PREFERRED_GHC_VERSION }}
