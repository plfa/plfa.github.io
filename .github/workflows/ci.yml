name: CI

on:
  push:
    branches:
      - dev
  pull_request:
    types:
      - opened
      - synchronize

env:
  CABAL_ARGS: "--project-file=cabal.project.ci"

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc-version: ["8.10.7"] # "9.2.2"
        cabal-version: ["3.6"]
        node-version: ["16"]
        epubcheck-version: ["4.2.4"]
        include:
          - experimental: false
          - os: windows-latest
            experimental: true

    name: Build on ${{ matrix.os }} with GHC ${{ matrix.ghc-version }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup EPUBCheck
        run: |
          wget https://github.com/w3c/epubcheck/releases/download/v${{ matrix.epubcheck-version }}/epubcheck-${{ matrix.epubcheck-version }}.zip -o "${{ runner.temp }}/epubcheck.zip"
          unzip "{{ runner.temp }}/epubcheck.zip" -d "${{ github.workspace }}/epubcheck/"
        shell: sh

      - name: Cabal freeze
        run: |
          cabal v2-update
          cabal v2-freeze $CABAL_ARGS

      - name: Cache Haskell
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: haskell-${{ runner.os }}-${{ matrix.ghc-version }}-${{ hashFiles('cabal.project.ci.freeze') }}
          restore-keys: haskell-${{ runner.os }}-${{ matrix.ghc-version }}-

      - name: Cache EPUBCheck
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/epubcheck/epubcheck-${{ matrix.epubcheck-version }}
          key: epubcheck-${{ runner.os }}-${{ matrix.epubcheck-version }}

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: _cache
          key: build-${{ runner.os }}

      - name: Build artifact
        run: make build

      - name: Test with HTML-validate
        run: make test-html-validate

      - name: Test with HTMLProofer
        run: make test-html-proofer
        env:
          NOKOGIRI_USE_SYSTEM_LIBRARIES: true

      - name: Test with EPUBCheck
        run: make test-epubcheck
        env:
          EPUBCHECK: "java -jar ${{ github.workspace }}/epubcheck/epubcheck-${{ matrix.epubcheck-version }}/epubcheck.jar"

      - name: Upload artifact
        if: runner.os == 'Linux' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: latest
          path: _site
          if-no-files-found: error

      - name: Upload artifact for pull request
        if: runner.os == 'Linux' && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-${{ github.event.pull_request.number }}
          path: _site
          if-no-files-found: error

  deploy:
    name: Deploy
    concurrency: ci-${{ github.ref }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Download artifact
        if: github.event_name == 'push'
        uses: actions/download-artifact@v3
        with:
          name: latest
          path: latest

      - name: Unpack legacy versions
        if: github.event_name == 'push'
        run: |
          unzip -q -n -d latest data/legacy/19.08.zip
          unzip -q -n -d latest data/legacy/20.07.zip

      - name: Deploy artifact
        if: github.event_name == 'push'
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: web
          folder: latest

  rebase:
    name: Rebase Pull Requests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: linhbn123/rebase-pull-requests@v1.0.1

