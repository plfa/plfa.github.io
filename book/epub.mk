#################################################################################
# Configuration
#################################################################################

METADATA_TITLE   := Programming Language Foundations in Agda
METADATA_AUTHORS := Philip Wadler & Wen Kokke & Jeremy G. Siek
METADATA_DATE    := $(shell date +"%B %d, %Y")
METADATA_LANG    := en_US

EPUBCHECK         ?= epubcheck
EBOOK_CONVERT     ?= ebook-convert

EPUB_DIR          := book
EPUB_TMP_DIR      := $(TMP_DIR)/book
EPUB_TEMPLATE_DIR := $(EPUB_DIR)/templates
EPUB_LUA_DIR      := $(EPUB_DIR)/lua
EPUB_LUA_SCRIPTS  := $(wildcard $(EPUB_LUA_DIR)/*.lua)
MD_DIR            := src
MD_FILES          := README.md $(wildcard $(MD_DIR)/plfa/**/*.md)
HTML_DIR          := $(TMP_DIR)/html
WEBFONTS_DIR      := public/webfonts
WEBFONTS          := $(wildcard $(WEBFONTS_DIR)/*.woff $(WEBFONTS_DIR)/*.woff2)

EBOOK_OUTPUT_PROFILES := cybookg3 cybook_opus default generic_eink generic_eink_hd generic_eink_large hanlinv3 hanlinv5 illiad ipad ipad3 irexdr1000 irexdr800 jetbook5 kindle kindle_dx kindle_fire kindle_oasis kindle_pw kindle_pw3 kindle_voyage kobo msreader mobipocket nook nook_color nook_hd_plus pocketbook_inkpad3 pocketbook_lux pocketbook_hd pocketbook_900 pocketbook_pro_912 galaxy sony sony300 sony900 sony-landscape sonyt3 tablet
EPUB_FILES := $(foreach ebook_output_profiles,$(EBOOK_OUTPUT_PROFILES),$(call EPUB_OUTPUT_PATH,$(ebook_output_profile)))


#################################################################################
# Compile PLFA to an EPUB using Pandoc
#################################################################################

.PHONY: epub epub-build
epub: epub-build
epub-build: $(SITE_DIR)/plfa.epub

$(EPUB_TMP_DIR)/epub.html: \
		$(EPUB_TMP_DIR)/epub.md $(EPUB_DIR)/epub.css $(MD_FILES) $(EPUB_LUA_SCRIPTS) | setup-install-pandoc
	@echo "Building self-contained HTML"
	@mkdir -p '$(@D)'
	$(PANDOC) \
		--self-contained																																					\
		--strip-comments																																					\
		--toc --toc-depth=2																																				\
		--css=$(EPUB_DIR)/epub.css																																\
		--top-level-division=chapter																															\
		--indented-code-class=default																															\
		--lua-filter=$(EPUB_LUA_DIR)/set-default-code-class.lua -M default-code-class=agda				\
		--lua-filter=$(EPUB_LUA_DIR)/remove-badges.lua -M badge-url=https://img.shields.io/badge/ \
		--lua-filter=$(EPUB_LUA_DIR)/epub-clean-html.lua																					\
		--lua-filter=$(EPUB_LUA_DIR)/single-file-links.lua																				\
		--lua-filter=$(EPUB_LUA_DIR)/single-file-identifiers.lua																	\
		$< -o $@


# Choose the correct EPUB output filename
define EPUB_OUTPUT_PATH
$(SITE_DIR)/plfa$(if $(filter default,$(1)),,.$(1)).epub
endef

define MK_EPUB_RULE
dst := $(1)
ebook_output_profile := $(2)
$$(dst): \
		$(EPUB_TMP_DIR)/epub.html \
		$(EPUB_DIR)/epub.css \
		$(WEBFONTS)
	@echo "Building $$(dst)"
	$(EBOOK_CONVERT) $$< $$@											\
		--title="$(METADATA_TITLE)"									\
		--authors="$(METADATA_AUTHORS)"							\
		--language="$(METADATA_LANG)"								\
		--pubdate="$(METADATA_DATE)"								\
		--output-profile="$$(ebook_output_profile)"	\
		--epub-version=3
endef

$(foreach ebook_output_profile,\
	$(EBOOK_OUTPUT_PROFILES),\
	$(eval $(call MK_EPUB_RULE,\
		$(call EPUB_OUTPUT_PATH,$(ebook_output_profile)),\
		$(ebook_output_profile))))


#################################################################################
# Test EPUB with EPUBCheck
#################################################################################

.PHONY: epub-test
epub-test: $(SITE_DIR)/plfa.epub | setup-check-epubcheck
	@echo "Testing EPUB with EPUBCheck"
	@$(EPUBCHECK) $(SITE_DIR)/plfa.epub


#################################################################################
# Tasks for files that are generated by Hakyll
#################################################################################

$(TMP_DIR)/epub.md: $(EPUB_DIR)/epub.md
	make build


#################################################################################
# Setup or check dependencies
#################################################################################

.PHONY: setup-check-epubcheck
setup-check-epubcheck:
ifeq (,$(wildcard $(shell which $(EPUBCHECK))))
	@echo "The command you called requires EPUBCheck"
	@echo "See: https://github.com/w3c/epubcheck"
endif

.PHONY: setup-check-calibre
setup-check-calibre:
ifeq (,$(wildcard $(shell which $(EBOOK_CONVERT))))
	@echo "The command you called requires Calibre"
	@echo "See: https://calibre-ebook.com/"
endif
